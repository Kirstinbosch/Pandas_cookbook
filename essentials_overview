1. Reading & writing data
  pd.read_csv()
  pd.read_excel()
  file_name.to_csv() --> export new data to csv

2. Inspecting data
  file_name.head() --> top
  file_name.tail() --> bottom
  file_name.info() --> general info
  file_name.describe() --> nice stats summary
  file_name.columns --> displays column names as List
  file_name.dtypes --> displays types in table form
  file_name.shape --> provides tuple of rows & columns

3. Dealing with missing values
  file_name.isnull().sum() --> tells us the nunber iof missing values per column
  file_name.isna().sum()
  file_name.dropna(how="all"/"any") --> drops complete rows or cells
  file_name.fillna() --> fills cells with specificed info (only replaces NaN, not zeros)
  sample["Age"] = sample["Age"].fillna(sample["Age"].mean()) (or .median, ..mode()[0] --> fills cell with stat

  4. String Standardization methods
      applying to one column:
        people_dirty["Name"] = people_dirty["Name"].str.title()
        .str.lower()
        .str.upper()
        .str.capitalize()
        .str.strip()
      applying to more than one column (looping):
        for col in ["Name", "Email", "City", "Location"]:
          employees_dirty[col] = employees_dirty[col].str.title()

5. Text Manipulation & Inspection methods
      Manipulation:
          replace()
                  string_methods["Job Title"] = string_methods["Job Title"].str.replace("Sr.", "Senior")
                  df['Name'] = df['Name'].str.replace(r"[^a-zA-Z\s]", "", regex=True)

          split()
                  string_methods[["Username", "Domain"]] = string_methods["Email"].str.split('@', expand=True)

          extract()
                  string_methods["Area Code"] = string_methods["Phone"].str.extract(r"\((\d{3})\)")
                  df['Year'] = df['Date'].str.extract(r"(\d{4})")
      Text Inspection:
          startswith()          employees_clean[employees_clean["City"].str.startswith("Los")]
          endswith()            employees_clean[employees_clean["Last Name"].str.endswith("son")]
          contains()            employees_clean[employees_clean["Department"].str.contains("ing")]
          len()                 employees_clean["First Name"].str.len()

6. Duplicates
      file_name.duplicated()
      file_name.drop_duplicates()
  
